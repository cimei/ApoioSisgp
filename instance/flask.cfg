# flask.cfg

import urllib
import os

# Criada via gerador randômico

SECRET_KEY = '\x8b\xe5\xdb\x17\xe8\x93h\\\xae\xe8\x13e.\xb0\xabU\xdc\xf8q\xf4\xef>~\xce'

# bancos de dados e mail

db_server   = os.environ.get('DB_SERVER')
db_port     = os.environ.get('DB_PORT')
db_database = os.environ.get('DB_DATABASE')
db_user     = os.environ.get('DB_USER')
db_pwd      = os.environ.get('DB_PWD')

mail_server   = os.environ.get('MAIL_SERVER')
mail_port     = os.environ.get('MAIL_PORT')
mail_use_tls  = os.environ.get('MAIL_USE_TLS')
mail_user_ssl = os.environ.get('MAIL_USE_SSL')
mail_user     = os.environ.get('MAIL_USER')
mail_pwd      = os.environ.get('MAIL_PWD')

## Para gerar documentação via Sphinx, as variáveis acima devem ser carregadas.
## Comentar as que estão acima e descomentar as que estão abaixo.

# db_server   = '#'
# db_port     = '#'
# db_database = '#'
# db_user     = '#'
# db_pwd      = '#'

# mail_server   = '#'
# mail_port     = '#'
# mail_use_tls  = '#'
# mail_user_ssl = '#'
# mail_user     = '#'
# mail_pwd      = '#'

params = urllib.parse.quote_plus("DRIVER={FreeTDS};\
                                SERVER=" + db_server + ";\
                                PORT=" + db_port + ";\
                                DATABASE=" + db_database +";\
                                UID=" + db_user +";PWD=" + db_pwd)

SQLALCHEMY_DATABASE_URI = "mssql+pyodbc:///?odbc_connect=%s" % params

SQLALCHEMY_TRACK_MODIFICATIONS = False

DEBUG = False
#DEBUG = True

MAIL_SERVER = mail_server
MAIL_PORT = mail_port
MAIL_USE_TLS = mail_use_tls
MAIL_USE_SSL = mail_user_ssl
MAIL_USERNAME = mail_user
MAIL_PASSWORD = mail_pwd
MAIL_DEFAULT_SENDER = mail_user
